{"version":3,"file":"index.js","sources":["../src/generate.ts"],"sourcesContent":["import { generateApi, type GenerateApiOutput, type GenerateApiParams } from \"swagger-typescript-api\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport fs from \"fs\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nconst generateIndex = (data: GenerateApiOutput, output: string) => {\n    const { files } = data;\n\n    const imports = files.map(({ name }) => `export * from \"./${name.replace(\".ts\", \"\")}\";`).join(\"\\n\");\n\n    fs.writeFile(path.join(output, \"index.ts\"), imports + \"\\n\", (err) => {\n        if (err) {\n            console.log(err);\n            process.exit(1);\n        } else {\n            console.log(\"Codes are generated \\n\");\n        }\n    });\n};\n\nconst generateModule = () => {\n    const moduleDirectory = path.resolve(process.cwd(), \"./src/module\");\n    const moduleContent =\n        `import { CoreModule, SessionStorageCache } from \"@pusula/module.core\";\n\nconst coreModule = new CoreModule({ key: \"CoreModule\" });\ncoreModule.register(SessionStorageCache, { key: \"SessionStorageCache\" });\nconst injectable = coreModule.createInjectable();\n\nexport { coreModule, injectable };`;\n\n    if (!fs.existsSync(moduleDirectory)){\n        fs.mkdirSync(moduleDirectory);\n    }\n\n    fs.writeFile(path.join(moduleDirectory, \"index.ts\"), moduleContent, (err) => {\n        if (err) {\n            console.log(err);\n            process.exit(1);\n        } else {\n            console.log(\"module generated \\n\");\n            process.exit();\n        }\n    });\n};\n\nexport const generate = async (options: GenerateApiParams) => {\n    const defaultOutput = path.resolve(process.cwd(), \"./src/__generated__\");\n    const defaultTemplates = path.resolve(__dirname, \"../src/templates\");\n\n    options.output = options.output || defaultOutput;\n    options.templates = options.templates || defaultTemplates;\n    options.name = options.name || \"api.ts\";\n\n    try {\n        const generateResult = await generateApi({\n            httpClientType: \"fetch\",\n            generateClient: true,\n            generateResponses: true,\n            moduleNameIndex: 1,\n            singleHttpClient: true,\n            cleanOutput: true,\n            sortTypes: true,\n            extractEnums: true,\n            extractRequestParams: true,\n            modular: true,\n            moduleNameFirstTag: true,\n            ...options\n        });\n\n        generateIndex(generateResult, options.output);\n        generateModule()\n    } catch (e) {\n        console.error(e);\n        process.exit(1);\n    }\n};\n"],"names":["__filename","fileURLToPath","__dirname","path","generateIndex","data","output","files","imports","name","fs","err","generateModule","moduleDirectory","moduleContent","generate","options","defaultOutput","defaultTemplates","generateResult","generateApi","e"],"mappings":";;;;AAKA,MAAMA,IAAaC,EAAc,YAAY,GAAG,GAC1CC,IAAYC,EAAK,QAAQH,CAAU,GAEnCI,IAAgB,CAACC,GAAyBC,MAAmB;AACzD,QAAA,EAAE,OAAAC,EAAU,IAAAF,GAEZG,IAAUD,EAAM,IAAI,CAAC,EAAE,MAAAE,EAAK,MAAM,oBAAoBA,EAAK,QAAQ,OAAO,EAAE,KAAK,EAAE,KAAK;AAAA,CAAI;AAE/F,EAAAC,EAAA,UAAUP,EAAK,KAAKG,GAAQ,UAAU,GAAGE,IAAU;AAAA,GAAM,CAACG,MAAQ;AACjE,IAAIA,KACA,QAAQ,IAAIA,CAAG,GACf,QAAQ,KAAK,CAAC,KAEd,QAAQ,IAAI;AAAA,CAAwB;AAAA,EACxC,CACH;AACL,GAEMC,IAAiB,MAAM;AACzB,QAAMC,IAAkBV,EAAK,QAAQ,QAAQ,IAAA,GAAO,cAAc,GAC5DW,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQJ,EAAKJ,EAAG,WAAWG,CAAe,KAC9BH,EAAG,UAAUG,CAAe,GAG7BH,EAAA,UAAUP,EAAK,KAAKU,GAAiB,UAAU,GAAGC,GAAe,CAACH,MAAQ;AACzE,IAAIA,KACA,QAAQ,IAAIA,CAAG,GACf,QAAQ,KAAK,CAAC,MAEd,QAAQ,IAAI;AAAA,CAAqB,GACjC,QAAQ,KAAK;AAAA,EACjB,CACH;AACL,GAEaI,IAAW,OAAOC,MAA+B;AAC1D,QAAMC,IAAgBd,EAAK,QAAQ,QAAQ,IAAA,GAAO,qBAAqB,GACjEe,IAAmBf,EAAK,QAAQD,GAAW,kBAAkB;AAE3D,EAAAc,EAAA,SAASA,EAAQ,UAAUC,GAC3BD,EAAA,YAAYA,EAAQ,aAAaE,GACjCF,EAAA,OAAOA,EAAQ,QAAQ;AAE3B,MAAA;AACM,UAAAG,IAAiB,MAAMC,EAAY;AAAA,MACrC,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,WAAW;AAAA,MACX,cAAc;AAAA,MACd,sBAAsB;AAAA,MACtB,SAAS;AAAA,MACT,oBAAoB;AAAA,MACpB,GAAGJ;AAAA,IAAA,CACN;AAEa,IAAAZ,EAAAe,GAAgBH,EAAQ,MAAM,GAC7BJ;WACVS;AACL,YAAQ,MAAMA,CAAC,GACf,QAAQ,KAAK,CAAC;AAAA,EAClB;AACJ;"}