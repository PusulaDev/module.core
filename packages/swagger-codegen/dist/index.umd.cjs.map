{"version":3,"file":"index.umd.cjs","sources":["../__vite-browser-external","../src/index.ts"],"sourcesContent":["export default {}","import { generateApi, GenerateApiOutput } from \"swagger-typescript-api\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\n\r\nexport interface ApiGenerateOptions {\r\n    url: string,\r\n    output?: string\r\n    templates?: string\r\n    /**\r\n     * default: api.ts\r\n     */\r\n    name?: string\r\n}\r\n\r\nconst generateIndex = (data:GenerateApiOutput,output:string) => {\r\n    const { files } = data;\r\n\r\n    const imports = files.map(({ name }) => `export * from \"./${name.replace(\".ts\", \"\")}\";`).join(\"\\n\");\r\n\r\n    fs.writeFile(path.join(output, \"index.ts\"), imports + \"\\n\", (err) => {\r\n        if (err) {\r\n            console.log(err);\r\n            process.exit(1);\r\n        } else {\r\n            console.log(\"Codes are generated \\n\");\r\n            process.exit();\r\n        }\r\n    });\r\n}\r\n\r\nexport const generate = async (options: ApiGenerateOptions) => {\r\n    const defaultOutput = path.resolve(process.cwd(), \"./src/__generated__\");\r\n    const defaultTempaltes = path.resolve(__dirname, \"./src/templates\")\r\n    const { url, output = defaultOutput, templates = defaultTempaltes,name = \"api.ts\" } = options;\r\n\r\n\r\n    try {\r\n        const generateResult = await generateApi({\r\n            name,\r\n            output,\r\n            url,\r\n            httpClientType: \"fetch\",\r\n            generateClient: true,\r\n            generateResponses: true,\r\n            moduleNameIndex: 1,\r\n            singleHttpClient: true,\r\n            cleanOutput: true,\r\n            sortTypes: true,\r\n            extractEnums: true,\r\n            extractRequestParams: true,\r\n            modular: true,\r\n            moduleNameFirstTag: true,\r\n            templates\r\n        })\r\n\r\n        generateIndex(generateResult,output);\r\n    }catch (e){\r\n        console.error(e);\r\n        process.exit(1);\r\n    }\r\n\r\n};\r\n"],"names":["path","generateIndex","data","output","files","imports","name","fs","err","generate","options","defaultOutput","defaultTempaltes","url","templates","generateResult","generateApi","e"],"mappings":"iTAAe,MAAAA,EAAA,CAAA,ECcTC,EAAgB,CAACC,EAAuBC,IAAkB,CACtD,KAAA,CAAE,MAAAC,CAAU,EAAAF,EAEZG,EAAUD,EAAM,IAAI,CAAC,CAAE,KAAAE,CAAK,IAAM,oBAAoBA,EAAK,QAAQ,MAAO,EAAE,KAAK,EAAE,KAAK;AAAA,CAAI,EAE/FC,EAAA,UAAUP,EAAK,KAAKG,EAAQ,UAAU,EAAGE,EAAU;AAAA,EAAOG,GAAQ,CAC7DA,GACA,QAAQ,IAAIA,CAAG,EACf,QAAQ,KAAK,CAAC,IAEd,QAAQ,IAAI;AAAA,CAAwB,EACpC,QAAQ,KAAK,EACjB,CACH,CACL,EAEaC,EAAW,MAAOC,GAAgC,CAC3D,MAAMC,EAAgBX,EAAK,QAAQ,QAAQ,IAAA,EAAO,qBAAqB,EACjEY,EAAmBZ,EAAK,QAAQ,UAAW,iBAAiB,EAC5D,CAAE,IAAAa,EAAK,OAAAV,EAASQ,EAAe,UAAAG,EAAYF,EAAiB,KAAAN,EAAO,QAAa,EAAAI,EAGlF,GAAA,CACM,MAAAK,EAAiB,MAAMC,cAAY,CACrC,KAAAV,EACA,OAAAH,EACA,IAAAU,EACA,eAAgB,QAChB,eAAgB,GAChB,kBAAmB,GACnB,gBAAiB,EACjB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,aAAc,GACd,qBAAsB,GACtB,QAAS,GACT,mBAAoB,GACpB,UAAAC,CAAA,CACH,EAEDb,EAAcc,EAAeZ,CAAM,QAC/Bc,GACJ,QAAQ,MAAMA,CAAC,EACf,QAAQ,KAAK,CAAC,CAClB,CAEJ"}