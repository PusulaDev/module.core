{"version":3,"file":"index.umd.cjs","sources":["../__vite-browser-external","../src/generate.ts"],"sourcesContent":["export default {}","import { generateApi, type GenerateApiOutput } from \"swagger-typescript-api\";\nimport path from \"path\";\nimport fs from \"fs\";\n\nexport interface ApiGenerateOptions {\n    url: string,\n    /**\n     * default ./src/__generated__\n     */\n    output?: string\n    /**\n     * default: templates at the pacakge folder.\n     */\n    templates?: string\n    /**\n     * default: api.ts\n     */\n    name?: string\n}\n\nconst generateIndex = (data:GenerateApiOutput,output:string) => {\n    const { files } = data;\n\n    const imports = files.map(({ name }) => `export * from \"./${name.replace(\".ts\", \"\")}\";`).join(\"\\n\");\n\n    fs.writeFile(path.join(output, \"index.ts\"), imports + \"\\n\", (err) => {\n        if (err) {\n            console.log(err);\n            process.exit(1);\n        } else {\n            console.log(\"Codes are generated \\n\");\n            process.exit();\n        }\n    });\n}\n\nexport const generate = async (options: ApiGenerateOptions) => {\n    const defaultOutput = path.resolve(process.cwd(), \"./src/__generated__\");\n    const defaultTempaltes = path.resolve(__dirname, \"./src/templates\")\n    const { url, output = defaultOutput, templates = defaultTempaltes,name = \"api.ts\" } = options;\n\n    try {\n        const generateResult = await generateApi({\n            name,\n            output,\n            url,\n            httpClientType: \"fetch\",\n            generateClient: true,\n            generateResponses: true,\n            moduleNameIndex: 1,\n            singleHttpClient: true,\n            cleanOutput: true,\n            sortTypes: true,\n            extractEnums: true,\n            extractRequestParams: true,\n            modular: true,\n            moduleNameFirstTag: true,\n            templates\n        })\n\n        generateIndex(generateResult,output);\n    }catch (e){\n        console.error(e);\n        process.exit(1);\n    }\n};\n"],"names":["path","generateIndex","data","output","files","imports","name","fs","err","generate","options","defaultOutput","defaultTempaltes","url","templates","generateResult","generateApi","e"],"mappings":"iTAAe,MAAAA,EAAA,CAAA,ECoBTC,EAAgB,CAACC,EAAuBC,IAAkB,CACtD,KAAA,CAAE,MAAAC,CAAU,EAAAF,EAEZG,EAAUD,EAAM,IAAI,CAAC,CAAE,KAAAE,CAAK,IAAM,oBAAoBA,EAAK,QAAQ,MAAO,EAAE,KAAK,EAAE,KAAK;AAAA,CAAI,EAE/FC,EAAA,UAAUP,EAAK,KAAKG,EAAQ,UAAU,EAAGE,EAAU;AAAA,EAAOG,GAAQ,CAC7DA,GACA,QAAQ,IAAIA,CAAG,EACf,QAAQ,KAAK,CAAC,IAEd,QAAQ,IAAI;AAAA,CAAwB,EACpC,QAAQ,KAAK,EACjB,CACH,CACL,EAEaC,EAAW,MAAOC,GAAgC,CAC3D,MAAMC,EAAgBX,EAAK,QAAQ,QAAQ,IAAA,EAAO,qBAAqB,EACjEY,EAAmBZ,EAAK,QAAQ,UAAW,iBAAiB,EAC5D,CAAE,IAAAa,EAAK,OAAAV,EAASQ,EAAe,UAAAG,EAAYF,EAAiB,KAAAN,EAAO,QAAa,EAAAI,EAElF,GAAA,CACM,MAAAK,EAAiB,MAAMC,cAAY,CACrC,KAAAV,EACA,OAAAH,EACA,IAAAU,EACA,eAAgB,QAChB,eAAgB,GAChB,kBAAmB,GACnB,gBAAiB,EACjB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,aAAc,GACd,qBAAsB,GACtB,QAAS,GACT,mBAAoB,GACpB,UAAAC,CAAA,CACH,EAEDb,EAAcc,EAAeZ,CAAM,QAC/Bc,GACJ,QAAQ,MAAMA,CAAC,EACf,QAAQ,KAAK,CAAC,CAClB,CACJ"}